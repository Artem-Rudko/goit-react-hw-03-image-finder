{"version":3,"sources":["components/SearchBar/SearchBar.js","components/Modal/Modal.js","components/ImageGalleryItem/ImagaGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","App.js","index.js"],"names":["SearchBar","state","inputValue","inputValueHandler","event","setState","target","value","formSbmitHandler","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","currentTarget","window","addEventListener","removeEventListener","createPortal","onClick","children","ImageGalleryItem","id","webformatURL","tags","onImgClick","src","alt","defaultProps","ImageGallery","gallery","map","largeImageURL","Button","BASE_URL","LOG","App","input","currentImg","imageGallery","currentPage","searchQuery","isLoading","error","inputSubmit","console","log","fetchImages","axios","get","then","response","prevState","data","hits","scrollTo","top","scrollHeight","behavior","catch","finally","toggleModal","showCurrentImg","url","prevProps","shouldRenderLoadMoreBtn","length","style","color","secondaryColor","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9e1b8806.chunk.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './SearchBar.css';\n\nclass SearchBar extends Component {\n    state = {\n        inputValue: '',\n    };\n\n    inputValueHandler = event => {\n        this.setState({ inputValue: event.target.value });\n    };\n\n    formSbmitHandler = event => {\n        event.preventDefault();\n        this.props.onSubmit(this.state);\n    };\n\n    render() {\n        return (\n            <header className=\"Searchbar\">\n                <form className=\"SearchForm\" onSubmit={this.formSbmitHandler}>\n                    <button type=\"submit\" className=\"SearchForm-button\">\n                        <span className=\"SearchForm-button-label\">Search</span>\n                    </button>\n\n                    <input\n                        className=\"SearchForm-input\"\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        value={this.state.inputValue}\n                        autoFocus\n                        placeholder=\"Search images and photos\"\n                        onChange={this.inputValueHandler}\n                    />\n                </form>\n            </header>\n        );\n    }\n}\n\nSearchBar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './Modal.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n    componentDidMount() {\n        window.addEventListener('keydown', this.handleKeyDown);\n        // window.addEventListener('click', (e) => {this.props.onClick()})\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (event.code === 'Escape') {\n            this.props.onClose();\n        }\n    };\n\n    handleBackdropClick = event => {\n        if (event.target === event.currentTarget) {\n            this.props.onClose();\n        }\n    };\n\n    // handleClick = (event) => {\n    //     if event\n    // }\n\n    render() {\n        return createPortal(\n            <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n                <div className=\"Modal\">{this.props.children}</div>\n            </div>,\n            modalRoot,\n        );\n    }\n}\n\nModal.propTypes = {\n    children: PropTypes.node.isRequired,\n    onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import PropTypes from 'prop-types';\nimport './ImageGalleryItem.css';\n\nconst ImageGalleryItem = ({ id, webformatURL, tags, onImgClick }) => (\n    <li key={id} className=\"ImageGalleryItem\">\n        <img\n            src={webformatURL}\n            alt={tags}\n            className=\"ImageGalleryItem-image\"\n            onClick={onImgClick}\n        />\n    </li>\n);\n\nImageGalleryItem.defaultProps = {\n    tags: 'some img',\n};\n\nImageGalleryItem.propTypes = {\n    id: PropTypes.number.isRequired,\n    webformatURL: PropTypes.string.isRequired,\n    tags: PropTypes.string,\n    onImgClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import ImageGalleryItem from '../ImageGalleryItem';\nimport PropTypes from 'prop-types';\nimport './ImageGallery.css';\n\nconst ImageGallery = ({ gallery, onImgClick }) => (\n    <ul className=\"ImageGallery\">\n        {gallery.map(({ id, webformatURL, largeImageURL, tags }) => (\n            <ImageGalleryItem\n                key={id}\n                id={id}\n                webformatURL={webformatURL}\n                tags={tags}\n                onImgClick={() => onImgClick(largeImageURL, tags)}\n            />\n        ))}\n    </ul>\n);\n\nImageGallery.propTypes = {\n    gallery: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            largeImageURL: PropTypes.string.isRequired,\n        }),\n    ).isRequired,\n    onImgClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport './Button.css';\n\nconst Button = ({ onClick }) => {\n    return (\n        <button type=\"button\" className=\"loadMoreBtn button\" onClick={onClick}>\n            Load more\n        </button>\n    );\n};\n\nButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { Component } from 'react';\nimport SearchBar from './components/SearchBar';\nimport Modal from './components/Modal';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport axios from 'axios';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n// import PropTypes from 'prop-types';\nimport './styles.css';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst LOG = '21433732-4f4ab4e06b98cffafd914747a';\n\nclass App extends Component {\n    state = {\n        input: '',\n        // showModal: false,\n        currentImg: '',\n        tags: '',\n        imageGallery: [],\n        currentPage: 1,\n        searchQuery: '',\n        isLoading: false,\n        error: null,\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.searchQuery !== this.state.searchQuery) {\n            this.fetchImages();\n        }\n    }\n\n    inputSubmit = ({ inputValue }) => {\n        // event.preventDefault();\n        console.log(inputValue);\n        this.setState({\n            searchQuery: inputValue,\n            currentPage: 1,\n            imageGallery: [],\n            error: null,\n        });\n    };\n\n    fetchImages = () => {\n        const { currentPage, searchQuery } = this.state;\n\n        this.setState({ isLoading: true });\n\n        axios\n            .get(\n                `${BASE_URL}?q=${searchQuery}&page=${currentPage}&key=${LOG}&image_type=photo&orientation=horizontal&per_page=12`,\n            )\n            .then(response => {\n                this.setState(prevState => ({\n                    imageGallery: [\n                        ...prevState.imageGallery,\n                        ...response.data.hits,\n                    ],\n                    currentPage: prevState.currentPage + 1,\n                }));\n\n                window.scrollTo({\n                    top: document.querySelector('.ImageGallery').scrollHeight,\n                    behavior: 'smooth',\n                });\n            })\n            .catch(error => this.setState({ error: error }))\n            .finally(() => this.setState({ isLoading: false }));\n    };\n\n    toggleModal = () => {\n        this.setState(state => ({\n            // showModal: !state.showModal,\n            currentImg: '',\n        }));\n    };\n\n    showCurrentImg = (url, tags) => {\n        this.setState({ currentImg: url, tags: tags });\n    };\n\n    render() {\n        const { currentImg, imageGallery, tags, isLoading, error } = this.state;\n        const shouldRenderLoadMoreBtn = imageGallery.length > 0 && !isLoading;\n\n        return (\n            <div className=\"App\">\n                <SearchBar onSubmit={this.inputSubmit} />\n                {currentImg && (\n                    <Modal onClose={this.toggleModal}>\n                        <img src={currentImg} alt={tags} />\n                    </Modal>\n                )}\n\n                {error && (\n                    <h2 style={{ color: 'rgba(253, 29, 29, 1)' }}>\n                        Something went wrong. Please, try again!\n                    </h2>\n                )}\n\n                <ImageGallery\n                    gallery={imageGallery}\n                    onImgClick={this.showCurrentImg}\n                />\n\n                {isLoading && (\n                    <Loader\n                        className=\"Loader\"\n                        type=\"MutatingDots\"\n                        color=\"rgba(253, 29, 29, 1)\"\n                        secondaryColor=\"rgba(252, 176, 69, 1)\"\n                        height={100}\n                        width={100}\n                    />\n                )}\n\n                {shouldRenderLoadMoreBtn && (\n                    <Button onClick={this.fetchImages} />\n                )}\n            </div>\n        );\n    }\n}\n\nApp.defaultProps = {};\n\nApp.propTypes = {};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}