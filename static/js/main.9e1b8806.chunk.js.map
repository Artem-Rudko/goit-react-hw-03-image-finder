{"version":3,"sources":["components/SearchBar/SearchBar.js","components/Modal/Modal.js","components/ImageGalleryItem/ImagaGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","App.js","index.js"],"names":["SearchBar","state","inputValue","inputValueHandler","event","setState","target","value","formSbmitHandler","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","currentTarget","window","addEventListener","removeEventListener","createPortal","onClick","children","ImageGalleryItem","id","webformatURL","tags","onImgClick","src","alt","defaultProps","ImageGallery","gallery","map","largeImageURL","Button","BASE_URL","LOG","App","input","currentImg","imageGallery","currentPage","searchQuery","isLoading","error","inputSubmit","console","log","fetchImages","axios","get","then","response","prevState","data","hits","scrollTo","top","scrollHeight","behavior","catch","finally","toggleModal","showCurrentImg","url","prevProps","shouldRenderLoadMoreBtn","length","style","color","secondaryColor","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9e1b8806.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends Component {\r\n    state = {\r\n        inputValue: '',\r\n    };\r\n\r\n    inputValueHandler = event => {\r\n        this.setState({ inputValue: event.target.value });\r\n    };\r\n\r\n    formSbmitHandler = event => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={this.formSbmitHandler}>\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        value={this.state.inputValue}\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        onChange={this.inputValueHandler}\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nSearchBar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBar;\r\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './Modal.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n        // window.addEventListener('click', (e) => {this.props.onClick()})\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (event.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    handleBackdropClick = event => {\r\n        if (event.target === event.currentTarget) {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n    // handleClick = (event) => {\r\n    //     if event\r\n    // }\r\n\r\n    render() {\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n                <div className=\"Modal\">{this.props.children}</div>\r\n            </div>,\r\n            modalRoot,\r\n        );\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import PropTypes from 'prop-types';\r\nimport './ImageGalleryItem.css';\r\n\r\nconst ImageGalleryItem = ({ id, webformatURL, tags, onImgClick }) => (\r\n    <li key={id} className=\"ImageGalleryItem\">\r\n        <img\r\n            src={webformatURL}\r\n            alt={tags}\r\n            className=\"ImageGalleryItem-image\"\r\n            onClick={onImgClick}\r\n        />\r\n    </li>\r\n);\r\n\r\nImageGalleryItem.defaultProps = {\r\n    tags: 'some img',\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    webformatURL: PropTypes.string.isRequired,\r\n    tags: PropTypes.string,\r\n    onImgClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import ImageGalleryItem from '../ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\nimport './ImageGallery.css';\r\n\r\nconst ImageGallery = ({ gallery, onImgClick }) => (\r\n    <ul className=\"ImageGallery\">\r\n        {gallery.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n            <ImageGalleryItem\r\n                key={id}\r\n                id={id}\r\n                webformatURL={webformatURL}\r\n                tags={tags}\r\n                onImgClick={() => onImgClick(largeImageURL, tags)}\r\n            />\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n    gallery: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number.isRequired,\r\n            largeImageURL: PropTypes.string.isRequired,\r\n        }),\r\n    ).isRequired,\r\n    onImgClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import PropTypes from 'prop-types';\r\nimport './Button.css';\r\n\r\nconst Button = ({ onClick }) => {\r\n    return (\r\n        <button type=\"button\" className=\"loadMoreBtn button\" onClick={onClick}>\r\n            Load more\r\n        </button>\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import { Component } from 'react';\r\nimport SearchBar from './components/SearchBar';\r\nimport Modal from './components/Modal';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Button from './components/Button';\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n// import PropTypes from 'prop-types';\r\nimport './styles.css';\r\n\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst LOG = '21433732-4f4ab4e06b98cffafd914747a';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        input: '',\r\n        // showModal: false,\r\n        currentImg: '',\r\n        tags: '',\r\n        imageGallery: [],\r\n        currentPage: 1,\r\n        searchQuery: '',\r\n        isLoading: false,\r\n        error: null,\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.searchQuery !== this.state.searchQuery) {\r\n            this.fetchImages();\r\n        }\r\n    }\r\n\r\n    inputSubmit = ({ inputValue }) => {\r\n        // event.preventDefault();\r\n        console.log(inputValue);\r\n        this.setState({\r\n            searchQuery: inputValue,\r\n            currentPage: 1,\r\n            imageGallery: [],\r\n            error: null,\r\n        });\r\n    };\r\n\r\n    fetchImages = () => {\r\n        const { currentPage, searchQuery } = this.state;\r\n\r\n        this.setState({ isLoading: true });\r\n\r\n        axios\r\n            .get(\r\n                `${BASE_URL}?q=${searchQuery}&page=${currentPage}&key=${LOG}&image_type=photo&orientation=horizontal&per_page=12`,\r\n            )\r\n            .then(response => {\r\n                this.setState(prevState => ({\r\n                    imageGallery: [\r\n                        ...prevState.imageGallery,\r\n                        ...response.data.hits,\r\n                    ],\r\n                    currentPage: prevState.currentPage + 1,\r\n                }));\r\n\r\n                window.scrollTo({\r\n                    top: document.querySelector('.ImageGallery').scrollHeight,\r\n                    behavior: 'smooth',\r\n                });\r\n            })\r\n            .catch(error => this.setState({ error: error }))\r\n            .finally(() => this.setState({ isLoading: false }));\r\n    };\r\n\r\n    toggleModal = () => {\r\n        this.setState(state => ({\r\n            // showModal: !state.showModal,\r\n            currentImg: '',\r\n        }));\r\n    };\r\n\r\n    showCurrentImg = (url, tags) => {\r\n        this.setState({ currentImg: url, tags: tags });\r\n    };\r\n\r\n    render() {\r\n        const { currentImg, imageGallery, tags, isLoading, error } = this.state;\r\n        const shouldRenderLoadMoreBtn = imageGallery.length > 0 && !isLoading;\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <SearchBar onSubmit={this.inputSubmit} />\r\n                {currentImg && (\r\n                    <Modal onClose={this.toggleModal}>\r\n                        <img src={currentImg} alt={tags} />\r\n                    </Modal>\r\n                )}\r\n\r\n                {error && (\r\n                    <h2 style={{ color: 'rgba(253, 29, 29, 1)' }}>\r\n                        Something went wrong. Please, try again!\r\n                    </h2>\r\n                )}\r\n\r\n                <ImageGallery\r\n                    gallery={imageGallery}\r\n                    onImgClick={this.showCurrentImg}\r\n                />\r\n\r\n                {isLoading && (\r\n                    <Loader\r\n                        className=\"Loader\"\r\n                        type=\"MutatingDots\"\r\n                        color=\"rgba(253, 29, 29, 1)\"\r\n                        secondaryColor=\"rgba(252, 176, 69, 1)\"\r\n                        height={100}\r\n                        width={100}\r\n                    />\r\n                )}\r\n\r\n                {shouldRenderLoadMoreBtn && (\r\n                    <Button onClick={this.fetchImages} />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nApp.defaultProps = {};\r\n\r\nApp.propTypes = {};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}